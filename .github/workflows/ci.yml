name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Lint
      run: npm run lint
      
    - name: Test
      run: npm test

  test:
    name: 🧪 Test & Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Lint
        run: npm run lint
        
      - name: 🧪 Run tests
        run: npm run test:coverage
        
      - name: 📊 Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30
          
  deploy-preview:
    name: 🚀 Deploy Preview
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: 📥 Download build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: 🚀 Deploy to preview
        id: deploy
        run: echo "Simulando deploy para ambiente de preview"

  deploy-production:
    name: 🚀 Deploy Production
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: 📥 Download build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: 🚀 Deploy to production
        id: deploy
        run: echo "Simulando deploy para ambiente de produção" 